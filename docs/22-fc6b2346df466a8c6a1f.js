(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{247:function(e,t,n){"use strict";n.r(t),n.d(t,"LoadingSpinner",(function(){return o})),n.d(t,"default",(function(){return o}));var r=n(0);let i;if(window.customElements){const e="size",t=document.createElement("template");t.innerHTML='<style>.spinner{margin:auto;height: 50px; width: 50px; animation: rotate 0.8s infinite linear; border: 6px solid var(--background-color); border-right-color: var(--primary-color); border-radius: 50%;}@keyframes rotate{from{transform: rotate(0deg);}to{transform: rotate(360deg);}}</style><div class="spinner"></div>';const n=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t;Object.defineProperty(e,n,{enumerable:!0,get(){const e=this.getAttribute(t);return null===e?"":e},set(e){this.setAttribute(t,e)}})};!window.customElements.get("loading-spinner")&&window.customElements.define("loading-spinner",class extends HTMLElement{constructor(){super();const r=t.content.cloneNode(!0),i=this.attachShadow({mode:"open"});i.appendChild(r),n(this,e),this.div=i.querySelector(".spinner")}static get observedAttributes(){return[e]}attributeChangedCallback(t,n,r){if(t===e&&r!==n){const e=this.div.style;e.height=e.width="string"==typeof r&&r.includes("px")?r:"".concat(r,"px")}}}),i=Object(r.h)("loading-spinner",{size:55})}else i="Connecting to the server";function o(){return Object(r.h)(r.d,null,i)}}}]);